# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.10.0 # podobny co na komputerach w labie 


# zmieniamy folder do którego pip ściąga pakiety, aby cacheować
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
# 

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

stages:
  - test
  - build
  - deploy



before_script:
  - python --version  # For debugging
  - pip install virtualenv wheel
  - virtualenv venv
  - source venv/bin/activate

test:
  stage: test
  script:
    - pip install flake8==4.0.1 pytest==7.0.1
    - pip install .
    - pytest test -vvv
run:
  stage: build
  script:
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

pages:
  stage: deploy
  dependencies: 
    - run
  artifacts:
    paths:
      - public
  script:
    - mkdir -p public
    - python website_gen/website_generator.py > public/index.html
    - cp dist/*.whl public/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
